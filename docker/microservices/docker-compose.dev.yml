#This docker-compose file is for overriding the api service. Volumes are added here just to be able to make the dev env capable of changing source files
#Rest will be just copied to this
#Use `docker-compose -f docker-compose.yml -f docker-compose.dev.yml build` to do this
services:
  api:
    command: npm run dev
    volumes:
      #path/in/this/filesystem:src/path/inside/the/container - /usr/src/app is the path used in the Dockerfile
      - ./api/src/:/usr/src/app/src

  frontend:
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    command: npm run start #The command in package.json is start, not dev
    # Since it fails in creating interactive console / the frontend service, add these
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/src:/usr/src/app/src/
    environment:
      - CHOKIDAR_USEPOLLING=true

  auth:
    command: npm run dev
    volumes:
      #path/in/this/filesystem:src/path/inside/the/container - /usr/src/app is the path used in the Dockerfile
      - ./auth/src/:/usr/src/app/src

  nginx:
    volumes:
      - ./nginx/nginx.conf.dev:/etc/nginx/conf.d//nginx.conf
